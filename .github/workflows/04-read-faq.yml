name: 04 - Read Live FAQs to Qdrant
description: |
  This workflow reads live Google Doc FAQs for all configured courses,
  extracts Q&A pairs, embeds them using multi-qa-mpnet-base-dot-v1,
  and indexes directly into separate Qdrant collections per course.

on:
  workflow_dispatch:
    inputs:
      course_id:
        description: 'Specific course ID to process (optional, processes all if empty)'
        required: false
        type: string
#  schedule:
#    - cron: "30 1 * * *"  # daily at 07:00 IST

env:
  # FAQ Configuration  
  FAQ_COURSES_YAML: "data-ingestion/pipeline/faq_courses.yml"
  FAQ_DOC_DATA_ENGINEERING: ${{ secrets.FAQ_DOC_DATA_ENGINEERING }}
  FAQ_DOC_LLM_ZOOMCAMP: ${{ secrets.FAQ_DOC_LLM_ZOOMCAMP }}
  FAQ_DOC_MLOPS_ZOOMCAMP: ${{ secrets.FAQ_DOC_MLOPS_ZOOMCAMP }}
  FAQ_DOC_ML_ZOOMCAMP: ${{ secrets.FAQ_DOC_ML_ZOOMCAMP }}
  FAQ_DOC_STOCKS_ANALYTICS: ${{ secrets.FAQ_DOC_STOCKS_ANALYTICS }}
  
  # Qdrant Configuration
  QDRANT_URL: ${{ secrets.QDRANT_URL }}
  QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
  QDRANT_BASE_COLLECTION: ${{ vars.QDRANT_BASE_COLLECTION || 'dtc_faq' }}
  EMBED_MODEL: ${{ vars.EMBED_MODEL || 'multi-qa-mpnet-base-dot-v1' }}

permissions:
  id-token: write
  contents: read

jobs:
  read-faq:
    name: Index FAQ to Qdrant
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync --group gdoc-faq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build FAQ Reader Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./data-ingestion/Dockerfile
          tags: dtc-faq-reader:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Auth to Google via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_FAQ_SA }}
          token_format: "access_token"

      - name: Index All Course FAQs to Qdrant
        run: |
          echo "Starting FAQ indexing for all courses..."
          echo "FAQ Config: $FAQ_COURSES_YAML"
          echo "Base Collection: $QDRANT_BASE_COLLECTION"
          echo "Embedding model: $EMBED_MODEL"
          
          # Mount Google Cloud credentials and project files into container
          if [ -n "${{ github.event.inputs.course_id }}" ]; then
            echo "Processing specific course: ${{ github.event.inputs.course_id }}"
            docker run --rm \
              -v "$GOOGLE_APPLICATION_CREDENTIALS:/tmp/gcp-key.json:ro" \
              -v "$PWD:/workspace:ro" \
              -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json \
              -e FAQ_COURSES_YAML=pipeline/faq_courses.yml \
              -e FAQ_DOC_DATA_ENGINEERING \
              -e FAQ_DOC_LLM_ZOOMCAMP \
              -e FAQ_DOC_MLOPS_ZOOMCAMP \
              -e FAQ_DOC_ML_ZOOMCAMP \
              -e FAQ_DOC_STOCKS_ANALYTICS \
              -e QDRANT_URL \
              -e QDRANT_API_KEY \
              -e QDRANT_BASE_COLLECTION \
              -e EMBED_MODEL \
              --workdir /workspace \
              dtc-faq-reader:latest --course-id "${{ github.event.inputs.course_id }}"
          else
            echo "Processing all configured courses"
            docker run --rm \
              -v "$GOOGLE_APPLICATION_CREDENTIALS:/tmp/gcp-key.json:ro" \
              -v "$PWD:/workspace:ro" \
              -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json \
              -e FAQ_COURSES_YAML=pipeline/faq_courses.yml \
              -e FAQ_DOC_DATA_ENGINEERING \
              -e FAQ_DOC_LLM_ZOOMCAMP \
              -e FAQ_DOC_MLOPS_ZOOMCAMP \
              -e FAQ_DOC_ML_ZOOMCAMP \
              -e FAQ_DOC_STOCKS_ANALYTICS \
              -e QDRANT_URL \
              -e QDRANT_API_KEY \
              -e QDRANT_BASE_COLLECTION \
              -e EMBED_MODEL \
              --workdir /workspace \
              dtc-faq-reader:latest
          fi
      
      - name: Output Summary
        if: always()
        run: |
          echo "## FAQ Indexing Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Config File**: $FAQ_COURSES_YAML" >> $GITHUB_STEP_SUMMARY
          echo "- **Base Collection**: $QDRANT_BASE_COLLECTION" >> $GITHUB_STEP_SUMMARY
          echo "- **Embedding Model**: $EMBED_MODEL" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ github.event.inputs.course_id }}" ]; then
            echo "- **Processed Course**: ${{ github.event.inputs.course_id }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Scope**: All configured courses" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY